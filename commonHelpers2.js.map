{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// // Описаний у документації\n import iziToast from \"izitoast\";\n// // Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', (event) => {\n    event.preventDefault();\n    const delay = Number(form.elements.delay.value); // Отримуємо затримку з поля вводу\n    const state = form.elements.state.value; // Отримуємо обрану опцію (fulfilled або rejected)\n    createNotification(delay, state);\n});\n\nfunction createNotification(delay, state) {\n    // // Create promise\n    const delayPromise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (state === 'fulfilled') {\n                resolve(delay);\n            } else {\n                reject(delay);\n            }\n        }, delay);\n    })\n    // // Registering promise callbacks\n    delayPromise\n        .then((delay) => {\n            iziToast.success({\n                title: 'OK',\n                message: `✅ Fulfilled promise in ${delay} ms!`,\n            });\n        })\n        .catch((delay) => {\n            iziToast.error({\n                title: 'Error',\n                message: `❌ Rejected promise in ${delay} ms`,\n            });\n        })\n    form.reset();\n}"],"names":["form","event","delay","state","createNotification","resolve","reject","iziToast"],"mappings":"uIAKA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAWC,GAAU,CACvCA,EAAM,eAAc,EACpB,MAAMC,EAAQ,OAAOF,EAAK,SAAS,MAAM,KAAK,EACxCG,EAAQH,EAAK,SAAS,MAAM,MAClCI,EAAmBF,EAAOC,CAAK,CACnC,CAAC,EAED,SAASC,EAAmBF,EAAOC,EAAO,CAEjB,IAAI,QAAQ,CAACE,EAASC,IAAW,CAClD,WAAW,IAAM,CACTH,IAAU,YACVE,EAAQH,CAAK,EAEbI,EAAOJ,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,EAGI,KAAMA,GAAU,CACbK,EAAS,QAAQ,CACb,MAAO,KACP,QAAS,0BAA0BL,CAAK,MACxD,CAAa,CACb,CAAS,EACA,MAAOA,GAAU,CACdK,EAAS,MAAM,CACX,MAAO,QACP,QAAS,yBAAyBL,CAAK,KACvD,CAAa,CACb,CAAS,EACLF,EAAK,MAAK,CACd"}